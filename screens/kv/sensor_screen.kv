<SensorScreen>
    name: "sensor"
    MDBoxLayout:
        id: sensor 
        orientation: "vertical"
        padding: dp(20), dp(20)
        size_hint: 1, 1
        pos_hint: {"center_y": 0.5}
        MDAnchorLayout:
            anchor_x: "center"
            anchor_y: "top"
            MDBoxLayout:
                orientation: "vertical"
                adaptive_height: True
                size_hint: 1, None
                pos_hint: {"center_y": 0.5, "center_x": 0.5}
                # radius: [dp(10)]
                # md_bg_color: 1, 1, 1, 1
                # canvas.before:
                #     Color:
                #         rgba: 0, 0, 0, 0.2  # Border color (Black with 20% opacity)
                #     Line:
                #         width: dp(1)  # Border thickness
                #         rounded_rectangle: (self.x, self.y, self.width, self.height, dp(10))  # Rounded borders
                
                MDIconButton: 
                    icon: "arrow-left-top"
                    icon_size: "32sp"
                    size_hint_y: None
                    on_release: root.manager.current = "dashboard"
                MDBoxLayout:
                    id: card
                    adaptive_height: True
                    orientation: "horizontal"
                    size_hint: 1, None
                    padding: dp(30), dp(20)
                    spacing: dp(10)
                    MDLabel:
                        text: root.text
                        halign: "center"    
                        valign: "center"
                        size_hint_y: None
                        height: self.texture_size[1]  # Adjust height dynamically
                        font_size: dp(12)
                        pos_hint: {"center_x": 0.5}
                        canvas.before:
                            Color:
                                rgba: 0, 0, 0, 1 # Border color (Black with 20% opacity)
                            Line:
                                width: dp(1)  # Border thickness
                                rounded_rectangle: (self.x, self.y, self.width, self.height, dp(10))  # Rounded borders
